// <auto-generated />
using System;
using AssetManagement.Core.Context;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

namespace AssetManagement.Core.Migrations
{
    [DbContext(typeof(AssetManagementContext))]
    [Migration("20220405105616_FirstMigration")]
    partial class FirstMigration
    {
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("Relational:MaxIdentifierLength", 128)
                .HasAnnotation("ProductVersion", "5.0.14")
                .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

            modelBuilder.Entity("AssetManagement.Core.Entity.ActionStatus", b =>
                {
                    b.Property<int>("ID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("ActionText")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int?>("CreatedBy")
                        .HasColumnType("int");

                    b.Property<DateTime?>("CreatedDate")
                        .HasColumnType("datetime2");

                    b.Property<bool?>("IsActive")
                        .HasColumnType("bit");

                    b.Property<int?>("ModifiedBy")
                        .HasColumnType("int");

                    b.Property<DateTime?>("ModifiedDate")
                        .HasColumnType("datetime2");

                    b.Property<int>("StatusActionID")
                        .HasColumnType("int");

                    b.Property<string>("StatusActionMetod")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("StatusController")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("StatusID")
                        .HasColumnType("int");

                    b.HasKey("ID");

                    b.HasIndex("StatusID");

                    b.ToTable("ActionStatus");

                    b.HasData(
                        new
                        {
                            ID = 1,
                            ActionText = "Emekli Et",
                            StatusActionID = 4,
                            StatusActionMetod = "_ToRetire",
                            StatusController = "AssetAction",
                            StatusID = 3
                        },
                        new
                        {
                            ID = 2,
                            ActionText = "İptal Et",
                            StatusActionID = 5,
                            StatusActionMetod = "_ToCancel",
                            StatusController = "AssetAction",
                            StatusID = 3
                        },
                        new
                        {
                            ID = 3,
                            ActionText = "Kayıp/Çalıntı Bildir",
                            StatusActionID = 5,
                            StatusActionMetod = "_ReportOfLostOrStolen",
                            StatusController = "AssetAction",
                            StatusID = 3
                        },
                        new
                        {
                            ID = 4,
                            ActionText = "İade Et",
                            StatusActionID = 7,
                            StatusActionMetod = "_ToReturn",
                            StatusController = "AssetAction",
                            StatusID = 3
                        },
                        new
                        {
                            ID = 5,
                            ActionText = "Yorum Ekle",
                            StatusActionID = 8,
                            StatusActionMetod = "_AddComment",
                            StatusController = "AssetAction",
                            StatusID = 3
                        },
                        new
                        {
                            ID = 6,
                            ActionText = "Depoya At",
                            StatusActionID = 6,
                            StatusActionMetod = "_PutInStorage",
                            StatusController = "AssetAction",
                            StatusID = 2
                        },
                        new
                        {
                            ID = 7,
                            ActionText = "Zimmet Ata",
                            StatusActionID = 2,
                            StatusActionMetod = "_ToOwner",
                            StatusController = "AssetAction",
                            StatusID = 2
                        },
                        new
                        {
                            ID = 8,
                            ActionText = "Tüket",
                            StatusActionID = 3,
                            StatusActionMetod = "_ToConsume",
                            StatusController = "AssetAction",
                            StatusID = 2
                        },
                        new
                        {
                            ID = 9,
                            ActionText = "Emekli Et",
                            StatusActionID = 4,
                            StatusActionMetod = "_ToRetire",
                            StatusController = "AssetAction",
                            StatusID = 2
                        },
                        new
                        {
                            ID = 10,
                            ActionText = "Kayıp/Çalıntı Bildir",
                            StatusActionID = 6,
                            StatusActionMetod = "_ReportOfLostOrStolen",
                            StatusController = "AssetAction",
                            StatusID = 2
                        },
                        new
                        {
                            ID = 11,
                            ActionText = "Yorum Ekle",
                            StatusActionID = 8,
                            StatusActionMetod = "_AddComment",
                            StatusController = "AssetAction",
                            StatusID = 2
                        },
                        new
                        {
                            ID = 12,
                            ActionText = "Emekli Et",
                            StatusActionID = 4,
                            StatusActionMetod = "_ToRetire",
                            StatusController = "AssetAction",
                            StatusID = 1
                        },
                        new
                        {
                            ID = 13,
                            ActionText = "Kayıp/Çalıntı Bildir",
                            StatusActionID = 6,
                            StatusActionMetod = "_ReportOfLostOrStolen",
                            StatusController = "AssetAction",
                            StatusID = 1
                        },
                        new
                        {
                            ID = 14,
                            ActionText = "Zimmet Ata",
                            StatusActionID = 2,
                            StatusActionMetod = "_ToOwner",
                            StatusController = "AssetAction",
                            StatusID = 1
                        },
                        new
                        {
                            ID = 15,
                            ActionText = "Yorum Ekle",
                            StatusActionID = 8,
                            StatusActionMetod = "_AddComment",
                            StatusController = "AssetAction",
                            StatusID = 1
                        });
                });

            modelBuilder.Entity("AssetManagement.Core.Entity.Asset", b =>
                {
                    b.Property<int>("ID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<int>("AssetBrandID")
                        .HasColumnType("int");

                    b.Property<int>("AssetGroupID")
                        .HasColumnType("int");

                    b.Property<int>("AssetModelID")
                        .HasColumnType("int");

                    b.Property<int>("AssetTypeID")
                        .HasColumnType("int");

                    b.Property<int>("CompanyID")
                        .HasColumnType("int");

                    b.Property<decimal>("Cost")
                        .HasColumnType("decimal(18,2)");

                    b.Property<int?>("CreatedBy")
                        .HasColumnType("int");

                    b.Property<DateTime?>("CreatedDate")
                        .HasColumnType("datetime2");

                    b.Property<int>("CurrencyID")
                        .HasColumnType("int");

                    b.Property<string>("Description")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime?>("EntryDate")
                        .HasColumnType("datetime2");

                    b.Property<bool>("Guarantee")
                        .HasColumnType("bit");

                    b.Property<bool?>("IsActive")
                        .HasColumnType("bit");

                    b.Property<bool>("IsBarcode")
                        .HasColumnType("bit");

                    b.Property<int?>("ModifiedBy")
                        .HasColumnType("int");

                    b.Property<DateTime?>("ModifiedDate")
                        .HasColumnType("datetime2");

                    b.Property<int>("RegistrationNumber")
                        .HasColumnType("int");

                    b.Property<DateTime?>("RetireDate")
                        .HasColumnType("datetime2");

                    b.HasKey("ID");

                    b.HasIndex("AssetBrandID");

                    b.HasIndex("AssetGroupID");

                    b.HasIndex("AssetModelID");

                    b.HasIndex("AssetTypeID");

                    b.HasIndex("CompanyID");

                    b.HasIndex("CurrencyID");

                    b.ToTable("Asset");
                });

            modelBuilder.Entity("AssetManagement.Core.Entity.AssetBarcode", b =>
                {
                    b.Property<int>("ID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<int>("AssetID")
                        .HasColumnType("int");

                    b.Property<string>("Barcode")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int?>("CreatedBy")
                        .HasColumnType("int");

                    b.Property<DateTime?>("CreatedDate")
                        .HasColumnType("datetime2");

                    b.Property<bool?>("IsActive")
                        .HasColumnType("bit");

                    b.Property<int?>("ModifiedBy")
                        .HasColumnType("int");

                    b.Property<DateTime?>("ModifiedDate")
                        .HasColumnType("datetime2");

                    b.HasKey("ID");

                    b.HasIndex("AssetID");

                    b.ToTable("AssetBarcode");
                });

            modelBuilder.Entity("AssetManagement.Core.Entity.AssetBrand", b =>
                {
                    b.Property<int>("ID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<int>("AssetTypeID")
                        .HasColumnType("int");

                    b.Property<int?>("CreatedBy")
                        .HasColumnType("int");

                    b.Property<DateTime?>("CreatedDate")
                        .HasColumnType("datetime2");

                    b.Property<string>("Description")
                        .HasColumnType("nvarchar(max)");

                    b.Property<bool?>("IsActive")
                        .HasColumnType("bit");

                    b.Property<int?>("ModifiedBy")
                        .HasColumnType("int");

                    b.Property<DateTime?>("ModifiedDate")
                        .HasColumnType("datetime2");

                    b.HasKey("ID");

                    b.HasIndex("AssetTypeID");

                    b.ToTable("AssetBrand");
                });

            modelBuilder.Entity("AssetManagement.Core.Entity.AssetCustomer", b =>
                {
                    b.Property<int>("ID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<int>("AssetID")
                        .HasColumnType("int");

                    b.Property<int?>("CreatedBy")
                        .HasColumnType("int");

                    b.Property<DateTime?>("CreatedDate")
                        .HasColumnType("datetime2");

                    b.Property<int>("CustomerID")
                        .HasColumnType("int");

                    b.Property<bool?>("IsActive")
                        .HasColumnType("bit");

                    b.Property<int?>("ModifiedBy")
                        .HasColumnType("int");

                    b.Property<DateTime?>("ModifiedDate")
                        .HasColumnType("datetime2");

                    b.HasKey("ID");

                    b.HasIndex("AssetID");

                    b.HasIndex("CustomerID");

                    b.ToTable("AssetCustomer");
                });

            modelBuilder.Entity("AssetManagement.Core.Entity.AssetDocument", b =>
                {
                    b.Property<int>("ID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<int>("AssetID")
                        .HasColumnType("int");

                    b.Property<int?>("CreatedBy")
                        .HasColumnType("int");

                    b.Property<DateTime?>("CreatedDate")
                        .HasColumnType("datetime2");

                    b.Property<string>("FilePath")
                        .HasColumnType("nvarchar(max)");

                    b.Property<bool?>("IsActive")
                        .HasColumnType("bit");

                    b.Property<int?>("ModifiedBy")
                        .HasColumnType("int");

                    b.Property<DateTime?>("ModifiedDate")
                        .HasColumnType("datetime2");

                    b.Property<string>("PageCode")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("ID");

                    b.HasIndex("AssetID");

                    b.ToTable("AssetDocument");
                });

            modelBuilder.Entity("AssetManagement.Core.Entity.AssetGroup", b =>
                {
                    b.Property<int>("ID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<int?>("CreatedBy")
                        .HasColumnType("int");

                    b.Property<DateTime?>("CreatedDate")
                        .HasColumnType("datetime2");

                    b.Property<string>("Description")
                        .HasColumnType("nvarchar(max)");

                    b.Property<bool>("IsActive")
                        .HasColumnType("bit");

                    b.Property<int?>("ModifiedBy")
                        .HasColumnType("int");

                    b.Property<DateTime?>("ModifiedDate")
                        .HasColumnType("datetime2");

                    b.HasKey("ID");

                    b.ToTable("AssetGroup");
                });

            modelBuilder.Entity("AssetManagement.Core.Entity.AssetModel", b =>
                {
                    b.Property<int>("ID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<int>("AssetBrandID")
                        .HasColumnType("int");

                    b.Property<int?>("CreatedBy")
                        .HasColumnType("int");

                    b.Property<DateTime?>("CreatedDate")
                        .HasColumnType("datetime2");

                    b.Property<string>("Description")
                        .HasColumnType("nvarchar(max)");

                    b.Property<bool?>("IsActive")
                        .HasColumnType("bit");

                    b.Property<int?>("ModifiedBy")
                        .HasColumnType("int");

                    b.Property<DateTime?>("ModifiedDate")
                        .HasColumnType("datetime2");

                    b.HasKey("ID");

                    b.HasIndex("AssetBrandID");

                    b.ToTable("AssetModel");
                });

            modelBuilder.Entity("AssetManagement.Core.Entity.AssetOwner", b =>
                {
                    b.Property<int>("ID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<int>("AssetID")
                        .HasColumnType("int");

                    b.Property<int?>("CreatedBy")
                        .HasColumnType("int");

                    b.Property<DateTime?>("CreatedDate")
                        .HasColumnType("datetime2");

                    b.Property<DateTime>("Date")
                        .HasColumnType("datetime2");

                    b.Property<bool?>("IsActive")
                        .HasColumnType("bit");

                    b.Property<int?>("ModifiedBy")
                        .HasColumnType("int");

                    b.Property<DateTime?>("ModifiedDate")
                        .HasColumnType("datetime2");

                    b.Property<int>("OwnerTypeID")
                        .HasColumnType("int");

                    b.Property<int>("PersonnelID")
                        .HasColumnType("int");

                    b.HasKey("ID");

                    b.HasIndex("AssetID");

                    b.HasIndex("OwnerTypeID");

                    b.HasIndex("PersonnelID");

                    b.ToTable("AssetOwner");
                });

            modelBuilder.Entity("AssetManagement.Core.Entity.AssetPrice", b =>
                {
                    b.Property<int>("ID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<int>("AssetID")
                        .HasColumnType("int");

                    b.Property<int?>("CreatedBy")
                        .HasColumnType("int");

                    b.Property<DateTime?>("CreatedDate")
                        .HasColumnType("datetime2");

                    b.Property<int?>("CurrencyID")
                        .HasColumnType("int");

                    b.Property<DateTime>("Date")
                        .HasColumnType("datetime2");

                    b.Property<bool?>("IsActive")
                        .HasColumnType("bit");

                    b.Property<int?>("ModifiedBy")
                        .HasColumnType("int");

                    b.Property<DateTime?>("ModifiedDate")
                        .HasColumnType("datetime2");

                    b.Property<decimal?>("Price")
                        .HasColumnType("decimal(18,2)");

                    b.HasKey("ID");

                    b.HasIndex("AssetID");

                    b.HasIndex("CurrencyID");

                    b.ToTable("AssetPrice");
                });

            modelBuilder.Entity("AssetManagement.Core.Entity.AssetStatus", b =>
                {
                    b.Property<int>("ID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<int>("AssetID")
                        .HasColumnType("int");

                    b.Property<int?>("CreatedBy")
                        .HasColumnType("int");

                    b.Property<DateTime?>("CreatedDate")
                        .HasColumnType("datetime2");

                    b.Property<DateTime>("Date")
                        .HasColumnType("datetime2");

                    b.Property<bool?>("IsActive")
                        .HasColumnType("bit");

                    b.Property<int?>("ModifiedBy")
                        .HasColumnType("int");

                    b.Property<DateTime?>("ModifiedDate")
                        .HasColumnType("datetime2");

                    b.Property<string>("Note")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("PersonnelID")
                        .HasColumnType("int");

                    b.Property<int>("StatusID")
                        .HasColumnType("int");

                    b.HasKey("ID");

                    b.HasIndex("AssetID");

                    b.HasIndex("PersonnelID");

                    b.HasIndex("StatusID");

                    b.ToTable("AssetStatus");
                });

            modelBuilder.Entity("AssetManagement.Core.Entity.AssetType", b =>
                {
                    b.Property<int>("ID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<int?>("CreatedBy")
                        .HasColumnType("int");

                    b.Property<DateTime?>("CreatedDate")
                        .HasColumnType("datetime2");

                    b.Property<string>("Description")
                        .HasColumnType("nvarchar(max)");

                    b.Property<bool?>("IsActive")
                        .HasColumnType("bit");

                    b.Property<int?>("ModifiedBy")
                        .HasColumnType("int");

                    b.Property<DateTime?>("ModifiedDate")
                        .HasColumnType("datetime2");

                    b.HasKey("ID");

                    b.ToTable("AssetType");
                });

            modelBuilder.Entity("AssetManagement.Core.Entity.AssetWithoutBarcode", b =>
                {
                    b.Property<int>("ID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<int>("AssetID")
                        .HasColumnType("int");

                    b.Property<int?>("CreatedBy")
                        .HasColumnType("int");

                    b.Property<DateTime?>("CreatedDate")
                        .HasColumnType("datetime2");

                    b.Property<bool?>("IsActive")
                        .HasColumnType("bit");

                    b.Property<int?>("ModifiedBy")
                        .HasColumnType("int");

                    b.Property<DateTime?>("ModifiedDate")
                        .HasColumnType("datetime2");

                    b.Property<decimal?>("Quantity")
                        .HasColumnType("decimal(18,2)");

                    b.Property<int?>("UnitID")
                        .HasColumnType("int");

                    b.HasKey("ID");

                    b.HasIndex("AssetID");

                    b.HasIndex("UnitID");

                    b.ToTable("AssetWithoutBarcode");
                });

            modelBuilder.Entity("AssetManagement.Core.Entity.CommType", b =>
                {
                    b.Property<int>("ID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<int?>("CreatedBy")
                        .HasColumnType("int");

                    b.Property<DateTime?>("CreatedDate")
                        .HasColumnType("datetime2");

                    b.Property<string>("Description")
                        .HasColumnType("nvarchar(max)");

                    b.Property<bool?>("IsActive")
                        .HasColumnType("bit");

                    b.Property<int?>("ModifiedBy")
                        .HasColumnType("int");

                    b.Property<DateTime?>("ModifiedDate")
                        .HasColumnType("datetime2");

                    b.HasKey("ID");

                    b.ToTable("CommType");
                });

            modelBuilder.Entity("AssetManagement.Core.Entity.Comment", b =>
                {
                    b.Property<int>("ID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<int>("AssetID")
                        .HasColumnType("int");

                    b.Property<int?>("CreatedBy")
                        .HasColumnType("int");

                    b.Property<DateTime?>("CreatedDate")
                        .HasColumnType("datetime2");

                    b.Property<string>("Date")
                        .HasColumnType("nvarchar(max)");

                    b.Property<bool?>("IsActive")
                        .HasColumnType("bit");

                    b.Property<int?>("ModifiedBy")
                        .HasColumnType("int");

                    b.Property<DateTime?>("ModifiedDate")
                        .HasColumnType("datetime2");

                    b.Property<string>("Note")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("PersonnelID")
                        .HasColumnType("int");

                    b.HasKey("ID");

                    b.HasIndex("AssetID");

                    b.HasIndex("PersonnelID");

                    b.ToTable("Comment");
                });

            modelBuilder.Entity("AssetManagement.Core.Entity.Communication", b =>
                {
                    b.Property<int>("ID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<int>("CommTypeID")
                        .HasColumnType("int");

                    b.Property<int?>("CreatedBy")
                        .HasColumnType("int");

                    b.Property<DateTime?>("CreatedDate")
                        .HasColumnType("datetime2");

                    b.Property<string>("Description")
                        .HasColumnType("nvarchar(max)");

                    b.Property<bool?>("IsActive")
                        .HasColumnType("bit");

                    b.Property<int?>("ModifiedBy")
                        .HasColumnType("int");

                    b.Property<DateTime?>("ModifiedDate")
                        .HasColumnType("datetime2");

                    b.Property<int>("PersonnelID")
                        .HasColumnType("int");

                    b.HasKey("ID");

                    b.HasIndex("CommTypeID");

                    b.HasIndex("PersonnelID");

                    b.ToTable("Communication");
                });

            modelBuilder.Entity("AssetManagement.Core.Entity.Company", b =>
                {
                    b.Property<int>("ID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<int?>("CreatedBy")
                        .HasColumnType("int");

                    b.Property<DateTime?>("CreatedDate")
                        .HasColumnType("datetime2");

                    b.Property<string>("Description")
                        .HasColumnType("nvarchar(max)");

                    b.Property<bool?>("IsActive")
                        .HasColumnType("bit");

                    b.Property<int?>("ModifiedBy")
                        .HasColumnType("int");

                    b.Property<DateTime?>("ModifiedDate")
                        .HasColumnType("datetime2");

                    b.HasKey("ID");

                    b.ToTable("Company");
                });

            modelBuilder.Entity("AssetManagement.Core.Entity.Currency", b =>
                {
                    b.Property<int>("ID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<int?>("CreatedBy")
                        .HasColumnType("int");

                    b.Property<DateTime?>("CreatedDate")
                        .HasColumnType("datetime2");

                    b.Property<string>("Description")
                        .HasColumnType("nvarchar(max)");

                    b.Property<bool?>("IsActive")
                        .HasColumnType("bit");

                    b.Property<int?>("ModifiedBy")
                        .HasColumnType("int");

                    b.Property<DateTime?>("ModifiedDate")
                        .HasColumnType("datetime2");

                    b.HasKey("ID");

                    b.ToTable("Currency");
                });

            modelBuilder.Entity("AssetManagement.Core.Entity.Customer", b =>
                {
                    b.Property<int>("ID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<int?>("CreatedBy")
                        .HasColumnType("int");

                    b.Property<DateTime?>("CreatedDate")
                        .HasColumnType("datetime2");

                    b.Property<string>("FirstName")
                        .HasColumnType("nvarchar(max)");

                    b.Property<bool?>("IsActive")
                        .HasColumnType("bit");

                    b.Property<string>("LastName")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int?>("ModifiedBy")
                        .HasColumnType("int");

                    b.Property<DateTime?>("ModifiedDate")
                        .HasColumnType("datetime2");

                    b.Property<string>("SubscriptionNumber")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("ID");

                    b.ToTable("Customer");
                });

            modelBuilder.Entity("AssetManagement.Core.Entity.LoginInfo", b =>
                {
                    b.Property<int>("ID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<int?>("CreatedBy")
                        .HasColumnType("int");

                    b.Property<DateTime?>("CreatedDate")
                        .HasColumnType("datetime2");

                    b.Property<bool?>("IsActive")
                        .HasColumnType("bit");

                    b.Property<int?>("ModifiedBy")
                        .HasColumnType("int");

                    b.Property<DateTime?>("ModifiedDate")
                        .HasColumnType("datetime2");

                    b.Property<byte[]>("PasswordHash")
                        .HasColumnType("varbinary(max)");

                    b.Property<byte[]>("PasswordSalt")
                        .HasColumnType("varbinary(max)");

                    b.Property<string>("UserName")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("ID");

                    b.ToTable("LoginInfo");
                });

            modelBuilder.Entity("AssetManagement.Core.Entity.OwnerType", b =>
                {
                    b.Property<int>("ID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<int?>("CreatedBy")
                        .HasColumnType("int");

                    b.Property<DateTime?>("CreatedDate")
                        .HasColumnType("datetime2");

                    b.Property<string>("Description")
                        .HasColumnType("nvarchar(max)");

                    b.Property<bool?>("IsActive")
                        .HasColumnType("bit");

                    b.Property<int?>("ModifiedBy")
                        .HasColumnType("int");

                    b.Property<DateTime?>("ModifiedDate")
                        .HasColumnType("datetime2");

                    b.HasKey("ID");

                    b.ToTable("OwnerType");
                });

            modelBuilder.Entity("AssetManagement.Core.Entity.Page", b =>
                {
                    b.Property<int>("ID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<int?>("CreatedBy")
                        .HasColumnType("int");

                    b.Property<DateTime?>("CreatedDate")
                        .HasColumnType("datetime2");

                    b.Property<string>("Description")
                        .HasColumnType("nvarchar(max)");

                    b.Property<bool?>("IsActive")
                        .HasColumnType("bit");

                    b.Property<int?>("ModifiedBy")
                        .HasColumnType("int");

                    b.Property<DateTime?>("ModifiedDate")
                        .HasColumnType("datetime2");

                    b.HasKey("ID");

                    b.ToTable("Page");
                });

            modelBuilder.Entity("AssetManagement.Core.Entity.PageClaim", b =>
                {
                    b.Property<int>("ID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<int?>("CreatedBy")
                        .HasColumnType("int");

                    b.Property<DateTime?>("CreatedDate")
                        .HasColumnType("datetime2");

                    b.Property<string>("Description")
                        .HasColumnType("nvarchar(max)");

                    b.Property<bool?>("IsActive")
                        .HasColumnType("bit");

                    b.Property<int?>("ModifiedBy")
                        .HasColumnType("int");

                    b.Property<DateTime?>("ModifiedDate")
                        .HasColumnType("datetime2");

                    b.Property<int?>("PageID")
                        .HasColumnType("int");

                    b.Property<int?>("RoleID")
                        .HasColumnType("int");

                    b.HasKey("ID");

                    b.HasIndex("PageID");

                    b.HasIndex("RoleID");

                    b.ToTable("PageClaim");
                });

            modelBuilder.Entity("AssetManagement.Core.Entity.PageClaimDetail", b =>
                {
                    b.Property<int>("ID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<int?>("CreatedBy")
                        .HasColumnType("int");

                    b.Property<DateTime?>("CreatedDate")
                        .HasColumnType("datetime2");

                    b.Property<string>("Date")
                        .HasColumnType("nvarchar(max)");

                    b.Property<bool?>("IsActive")
                        .HasColumnType("bit");

                    b.Property<int?>("ModifiedBy")
                        .HasColumnType("int");

                    b.Property<DateTime?>("ModifiedDate")
                        .HasColumnType("datetime2");

                    b.Property<int>("PageClaimID")
                        .HasColumnType("int");

                    b.Property<int>("PageID")
                        .HasColumnType("int");

                    b.Property<int>("RoleID")
                        .HasColumnType("int");

                    b.HasKey("ID");

                    b.HasIndex("PageClaimID");

                    b.HasIndex("PageID");

                    b.HasIndex("RoleID");

                    b.ToTable("PageClaimDetail");
                });

            modelBuilder.Entity("AssetManagement.Core.Entity.Personnel", b =>
                {
                    b.Property<int>("ID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<int>("CompanyID")
                        .HasColumnType("int");

                    b.Property<int?>("CreatedBy")
                        .HasColumnType("int");

                    b.Property<DateTime?>("CreatedDate")
                        .HasColumnType("datetime2");

                    b.Property<string>("FirstName")
                        .HasColumnType("nvarchar(max)");

                    b.Property<bool?>("IsActive")
                        .HasColumnType("bit");

                    b.Property<string>("LastName")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("MasterID")
                        .HasColumnType("int");

                    b.Property<int?>("ModifiedBy")
                        .HasColumnType("int");

                    b.Property<DateTime?>("ModifiedDate")
                        .HasColumnType("datetime2");

                    b.HasKey("ID");

                    b.HasIndex("CompanyID");

                    b.ToTable("Personnel");
                });

            modelBuilder.Entity("AssetManagement.Core.Entity.PersonnelAssetList", b =>
                {
                    b.Property<int>("ID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("AssetBrand")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("AssetModel")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("AssetType")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Barcode")
                        .HasColumnType("nvarchar(max)");

                    b.Property<decimal>("CurrentPrice")
                        .HasColumnType("decimal(18,2)");

                    b.Property<int>("RegistrationNumber")
                        .HasColumnType("int");

                    b.HasKey("ID");

                    b.ToTable("PersonnelAssetList", "sp_PersonnelAssetList");
                });

            modelBuilder.Entity("AssetManagement.Core.Entity.PersonnelLoginInfo", b =>
                {
                    b.Property<int>("ID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<int?>("CreatedBy")
                        .HasColumnType("int");

                    b.Property<DateTime?>("CreatedDate")
                        .HasColumnType("datetime2");

                    b.Property<DateTime>("Date")
                        .HasColumnType("datetime2");

                    b.Property<bool?>("IsActive")
                        .HasColumnType("bit");

                    b.Property<int>("LoginInfoID")
                        .HasColumnType("int");

                    b.Property<int?>("ModifiedBy")
                        .HasColumnType("int");

                    b.Property<DateTime?>("ModifiedDate")
                        .HasColumnType("datetime2");

                    b.Property<int>("PersonnelID")
                        .HasColumnType("int");

                    b.HasKey("ID");

                    b.HasIndex("LoginInfoID");

                    b.HasIndex("PersonnelID");

                    b.ToTable("PersonnelLoginInfo");
                });

            modelBuilder.Entity("AssetManagement.Core.Entity.Role", b =>
                {
                    b.Property<int>("ID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<int?>("CreatedBy")
                        .HasColumnType("int");

                    b.Property<DateTime?>("CreatedDate")
                        .HasColumnType("datetime2");

                    b.Property<string>("Description")
                        .HasColumnType("nvarchar(max)");

                    b.Property<bool?>("IsActive")
                        .HasColumnType("bit");

                    b.Property<int?>("ModifiedBy")
                        .HasColumnType("int");

                    b.Property<DateTime?>("ModifiedDate")
                        .HasColumnType("datetime2");

                    b.HasKey("ID");

                    b.ToTable("Role");
                });

            modelBuilder.Entity("AssetManagement.Core.Entity.RolePersonnel", b =>
                {
                    b.Property<int>("ID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<int?>("CreatedBy")
                        .HasColumnType("int");

                    b.Property<DateTime?>("CreatedDate")
                        .HasColumnType("datetime2");

                    b.Property<DateTime>("Date")
                        .HasColumnType("datetime2");

                    b.Property<bool?>("IsActive")
                        .HasColumnType("bit");

                    b.Property<int?>("ModifiedBy")
                        .HasColumnType("int");

                    b.Property<DateTime?>("ModifiedDate")
                        .HasColumnType("datetime2");

                    b.Property<int>("PersonnelID")
                        .HasColumnType("int");

                    b.Property<int>("RoleID")
                        .HasColumnType("int");

                    b.HasKey("ID");

                    b.HasIndex("PersonnelID");

                    b.HasIndex("RoleID");

                    b.ToTable("RolePersonnel");
                });

            modelBuilder.Entity("AssetManagement.Core.Entity.Status", b =>
                {
                    b.Property<int>("ID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<int?>("CreatedBy")
                        .HasColumnType("int");

                    b.Property<DateTime?>("CreatedDate")
                        .HasColumnType("datetime2");

                    b.Property<string>("Description")
                        .HasColumnType("nvarchar(max)");

                    b.Property<bool?>("IsActive")
                        .HasColumnType("bit");

                    b.Property<int>("MasterID")
                        .HasColumnType("int");

                    b.Property<int?>("ModifiedBy")
                        .HasColumnType("int");

                    b.Property<DateTime?>("ModifiedDate")
                        .HasColumnType("datetime2");

                    b.HasKey("ID");

                    b.ToTable("Status");
                });

            modelBuilder.Entity("AssetManagement.Core.Entity.SystemLists", b =>
                {
                    b.Property<int>("ID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("Code")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Description")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Detail")
                        .HasColumnType("nvarchar(max)");

                    b.Property<bool>("IsActive")
                        .HasColumnType("bit");

                    b.Property<string>("OperationAction")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("OperationController")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Project")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("ID");

                    b.ToTable("SystemLists");

                    b.HasData(
                        new
                        {
                            ID = 1,
                            Code = "Product_Asset_ProductGroup",
                            Description = "Ürün Grubu (1)",
                            Detail = "",
                            IsActive = true,
                            OperationAction = "Index",
                            OperationController = "Admin/AssetGroup",
                            Project = "Zimmet"
                        },
                        new
                        {
                            ID = 2,
                            Code = "Product_Asset_Brand",
                            Description = "Marka",
                            Detail = "",
                            IsActive = true,
                            OperationAction = "Index",
                            OperationController = "Admin/Brand",
                            Project = "Zimmet"
                        },
                        new
                        {
                            ID = 3,
                            Code = "Product_Asset_Model",
                            Description = "Model (3)",
                            Detail = "",
                            IsActive = true,
                            OperationAction = "Index",
                            OperationController = "Admin/Model",
                            Project = "Zimmet"
                        },
                        new
                        {
                            ID = 4,
                            Code = "Product_Asset_AssetType",
                            Description = "Zimmet Modülü Zimmet Türü",
                            Detail = "",
                            IsActive = true,
                            OperationAction = "",
                            OperationController = "",
                            Project = "Zimmet"
                        },
                        new
                        {
                            ID = 5,
                            Code = "Product_Asset_Company",
                            Description = "Üretici (2)",
                            Detail = "",
                            IsActive = true,
                            OperationAction = "",
                            OperationController = "",
                            Project = "Zimmet"
                        },
                        new
                        {
                            ID = 6,
                            Code = "ProductCostCurrency",
                            Description = "Zimmet Modülü Ürünün Para Birimi Listesi",
                            Detail = "",
                            IsActive = true,
                            Project = "Zimmet"
                        });
                });

            modelBuilder.Entity("AssetManagement.Core.Entity.TeamAssetList", b =>
                {
                    b.Property<int>("ID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("AssetBrand")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("AssetModel")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("AssetType")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Barcode")
                        .HasColumnType("nvarchar(max)");

                    b.Property<decimal>("CurrentPrice")
                        .HasColumnType("decimal(18,2)");

                    b.Property<int>("RegistrationNumber")
                        .HasColumnType("int");

                    b.HasKey("ID");

                    b.ToTable("TeamAssetList", "sp_TeamAssetList");
                });

            modelBuilder.Entity("AssetManagement.Core.Entity.Unit", b =>
                {
                    b.Property<int>("ID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<int?>("CreatedBy")
                        .HasColumnType("int");

                    b.Property<DateTime?>("CreatedDate")
                        .HasColumnType("datetime2");

                    b.Property<string>("Description")
                        .HasColumnType("nvarchar(max)");

                    b.Property<bool?>("IsActive")
                        .HasColumnType("bit");

                    b.Property<int?>("ModifiedBy")
                        .HasColumnType("int");

                    b.Property<DateTime?>("ModifiedDate")
                        .HasColumnType("datetime2");

                    b.HasKey("ID");

                    b.ToTable("Unit");
                });

            modelBuilder.Entity("AssetManagement.Core.Entity.WarehouseAllAssetList", b =>
                {
                    b.Property<int>("ID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("AssetBrand")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("AssetModel")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("AssetType")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Barcode")
                        .HasColumnType("nvarchar(max)");

                    b.Property<decimal>("CurrentPrice")
                        .HasColumnType("decimal(18,2)");

                    b.Property<int>("RegistrationNumber")
                        .HasColumnType("int");

                    b.HasKey("ID");

                    b.ToTable("WarehouseAllAssetList", "sp_WarehouseAllAssetList");
                });

            modelBuilder.Entity("AssetManagement.Core.Entity.ActionStatus", b =>
                {
                    b.HasOne("AssetManagement.Core.Entity.Status", "Status")
                        .WithMany("ActionStatus")
                        .HasForeignKey("StatusID")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Status");
                });

            modelBuilder.Entity("AssetManagement.Core.Entity.Asset", b =>
                {
                    b.HasOne("AssetManagement.Core.Entity.AssetBrand", "AssetBrand")
                        .WithMany("Asset")
                        .HasForeignKey("AssetBrandID")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("AssetManagement.Core.Entity.AssetGroup", "AssetGroup")
                        .WithMany("Asset")
                        .HasForeignKey("AssetGroupID")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("AssetManagement.Core.Entity.AssetModel", "AssetModel")
                        .WithMany("Asset")
                        .HasForeignKey("AssetModelID")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("AssetManagement.Core.Entity.AssetType", "AssetType")
                        .WithMany("Asset")
                        .HasForeignKey("AssetTypeID")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("AssetManagement.Core.Entity.Company", "Company")
                        .WithMany("Asset")
                        .HasForeignKey("CompanyID")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("AssetManagement.Core.Entity.Currency", "Currency")
                        .WithMany("Asset")
                        .HasForeignKey("CurrencyID")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("AssetBrand");

                    b.Navigation("AssetGroup");

                    b.Navigation("AssetModel");

                    b.Navigation("AssetType");

                    b.Navigation("Company");

                    b.Navigation("Currency");
                });

            modelBuilder.Entity("AssetManagement.Core.Entity.AssetBarcode", b =>
                {
                    b.HasOne("AssetManagement.Core.Entity.Asset", "Asset")
                        .WithMany("AssetBarcode")
                        .HasForeignKey("AssetID")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Asset");
                });

            modelBuilder.Entity("AssetManagement.Core.Entity.AssetBrand", b =>
                {
                    b.HasOne("AssetManagement.Core.Entity.AssetType", "AssetType")
                        .WithMany("MasterDetail")
                        .HasForeignKey("AssetTypeID")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("AssetType");
                });

            modelBuilder.Entity("AssetManagement.Core.Entity.AssetCustomer", b =>
                {
                    b.HasOne("AssetManagement.Core.Entity.Asset", "Asset")
                        .WithMany("AssetCustomer")
                        .HasForeignKey("AssetID")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("AssetManagement.Core.Entity.Customer", "Customer")
                        .WithMany("AssetCustomer")
                        .HasForeignKey("CustomerID")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Asset");

                    b.Navigation("Customer");
                });

            modelBuilder.Entity("AssetManagement.Core.Entity.AssetDocument", b =>
                {
                    b.HasOne("AssetManagement.Core.Entity.Asset", "Asset")
                        .WithMany("AssetDocument")
                        .HasForeignKey("AssetID")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Asset");
                });

            modelBuilder.Entity("AssetManagement.Core.Entity.AssetModel", b =>
                {
                    b.HasOne("AssetManagement.Core.Entity.AssetBrand", "AssetBrand")
                        .WithMany()
                        .HasForeignKey("AssetBrandID")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("AssetBrand");
                });

            modelBuilder.Entity("AssetManagement.Core.Entity.AssetOwner", b =>
                {
                    b.HasOne("AssetManagement.Core.Entity.Asset", "Asset")
                        .WithMany("AssetOwner")
                        .HasForeignKey("AssetID")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("AssetManagement.Core.Entity.OwnerType", "OwnerType")
                        .WithMany("AssetOwner")
                        .HasForeignKey("OwnerTypeID")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("AssetManagement.Core.Entity.Personnel", "Personnel")
                        .WithMany("AssetOwner")
                        .HasForeignKey("PersonnelID")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Asset");

                    b.Navigation("OwnerType");

                    b.Navigation("Personnel");
                });

            modelBuilder.Entity("AssetManagement.Core.Entity.AssetPrice", b =>
                {
                    b.HasOne("AssetManagement.Core.Entity.Asset", "Asset")
                        .WithMany("AssetPrice")
                        .HasForeignKey("AssetID")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("AssetManagement.Core.Entity.Currency", "Currency")
                        .WithMany("AssetPrice")
                        .HasForeignKey("CurrencyID");

                    b.Navigation("Asset");

                    b.Navigation("Currency");
                });

            modelBuilder.Entity("AssetManagement.Core.Entity.AssetStatus", b =>
                {
                    b.HasOne("AssetManagement.Core.Entity.Asset", "Asset")
                        .WithMany("AssetStatus")
                        .HasForeignKey("AssetID")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("AssetManagement.Core.Entity.Personnel", "Personnel")
                        .WithMany("AssetStatus")
                        .HasForeignKey("PersonnelID")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("AssetManagement.Core.Entity.Status", "Status")
                        .WithMany("AssetStatus")
                        .HasForeignKey("StatusID")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Asset");

                    b.Navigation("Personnel");

                    b.Navigation("Status");
                });

            modelBuilder.Entity("AssetManagement.Core.Entity.AssetWithoutBarcode", b =>
                {
                    b.HasOne("AssetManagement.Core.Entity.Asset", "Asset")
                        .WithMany("AssetWithoutBarcode")
                        .HasForeignKey("AssetID")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("AssetManagement.Core.Entity.Unit", "Unit")
                        .WithMany("AssetWithoutBarcode")
                        .HasForeignKey("UnitID");

                    b.Navigation("Asset");

                    b.Navigation("Unit");
                });

            modelBuilder.Entity("AssetManagement.Core.Entity.Comment", b =>
                {
                    b.HasOne("AssetManagement.Core.Entity.Asset", "Asset")
                        .WithMany("Comment")
                        .HasForeignKey("AssetID")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("AssetManagement.Core.Entity.Personnel", "Personnel")
                        .WithMany("Comment")
                        .HasForeignKey("PersonnelID")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Asset");

                    b.Navigation("Personnel");
                });

            modelBuilder.Entity("AssetManagement.Core.Entity.Communication", b =>
                {
                    b.HasOne("AssetManagement.Core.Entity.CommType", "CommType")
                        .WithMany("Communication")
                        .HasForeignKey("CommTypeID")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("AssetManagement.Core.Entity.Personnel", "Personnel")
                        .WithMany("Communication")
                        .HasForeignKey("PersonnelID")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("CommType");

                    b.Navigation("Personnel");
                });

            modelBuilder.Entity("AssetManagement.Core.Entity.PageClaim", b =>
                {
                    b.HasOne("AssetManagement.Core.Entity.Page", null)
                        .WithMany("PageClaim")
                        .HasForeignKey("PageID");

                    b.HasOne("AssetManagement.Core.Entity.Role", null)
                        .WithMany("PageClaim")
                        .HasForeignKey("RoleID");
                });

            modelBuilder.Entity("AssetManagement.Core.Entity.PageClaimDetail", b =>
                {
                    b.HasOne("AssetManagement.Core.Entity.PageClaim", "PageClaim")
                        .WithMany("PageClaimDetail")
                        .HasForeignKey("PageClaimID")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("AssetManagement.Core.Entity.Page", "Page")
                        .WithMany()
                        .HasForeignKey("PageID")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("AssetManagement.Core.Entity.Role", "Role")
                        .WithMany()
                        .HasForeignKey("RoleID")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Page");

                    b.Navigation("PageClaim");

                    b.Navigation("Role");
                });

            modelBuilder.Entity("AssetManagement.Core.Entity.Personnel", b =>
                {
                    b.HasOne("AssetManagement.Core.Entity.Company", "Company")
                        .WithMany("Personnel")
                        .HasForeignKey("CompanyID")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Company");
                });

            modelBuilder.Entity("AssetManagement.Core.Entity.PersonnelLoginInfo", b =>
                {
                    b.HasOne("AssetManagement.Core.Entity.LoginInfo", "LoginInfo")
                        .WithMany()
                        .HasForeignKey("LoginInfoID")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("AssetManagement.Core.Entity.Personnel", "Personnel")
                        .WithMany("PersonnelLoginInfo")
                        .HasForeignKey("PersonnelID")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("LoginInfo");

                    b.Navigation("Personnel");
                });

            modelBuilder.Entity("AssetManagement.Core.Entity.RolePersonnel", b =>
                {
                    b.HasOne("AssetManagement.Core.Entity.Personnel", "Personnel")
                        .WithMany()
                        .HasForeignKey("PersonnelID")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("AssetManagement.Core.Entity.Role", "Role")
                        .WithMany("RolePersonnel")
                        .HasForeignKey("RoleID")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Personnel");

                    b.Navigation("Role");
                });

            modelBuilder.Entity("AssetManagement.Core.Entity.Asset", b =>
                {
                    b.Navigation("AssetBarcode");

                    b.Navigation("AssetCustomer");

                    b.Navigation("AssetDocument");

                    b.Navigation("AssetOwner");

                    b.Navigation("AssetPrice");

                    b.Navigation("AssetStatus");

                    b.Navigation("AssetWithoutBarcode");

                    b.Navigation("Comment");
                });

            modelBuilder.Entity("AssetManagement.Core.Entity.AssetBrand", b =>
                {
                    b.Navigation("Asset");
                });

            modelBuilder.Entity("AssetManagement.Core.Entity.AssetGroup", b =>
                {
                    b.Navigation("Asset");
                });

            modelBuilder.Entity("AssetManagement.Core.Entity.AssetModel", b =>
                {
                    b.Navigation("Asset");
                });

            modelBuilder.Entity("AssetManagement.Core.Entity.AssetType", b =>
                {
                    b.Navigation("Asset");

                    b.Navigation("MasterDetail");
                });

            modelBuilder.Entity("AssetManagement.Core.Entity.CommType", b =>
                {
                    b.Navigation("Communication");
                });

            modelBuilder.Entity("AssetManagement.Core.Entity.Company", b =>
                {
                    b.Navigation("Asset");

                    b.Navigation("Personnel");
                });

            modelBuilder.Entity("AssetManagement.Core.Entity.Currency", b =>
                {
                    b.Navigation("Asset");

                    b.Navigation("AssetPrice");
                });

            modelBuilder.Entity("AssetManagement.Core.Entity.Customer", b =>
                {
                    b.Navigation("AssetCustomer");
                });

            modelBuilder.Entity("AssetManagement.Core.Entity.OwnerType", b =>
                {
                    b.Navigation("AssetOwner");
                });

            modelBuilder.Entity("AssetManagement.Core.Entity.Page", b =>
                {
                    b.Navigation("PageClaim");
                });

            modelBuilder.Entity("AssetManagement.Core.Entity.PageClaim", b =>
                {
                    b.Navigation("PageClaimDetail");
                });

            modelBuilder.Entity("AssetManagement.Core.Entity.Personnel", b =>
                {
                    b.Navigation("AssetOwner");

                    b.Navigation("AssetStatus");

                    b.Navigation("Comment");

                    b.Navigation("Communication");

                    b.Navigation("PersonnelLoginInfo");
                });

            modelBuilder.Entity("AssetManagement.Core.Entity.Role", b =>
                {
                    b.Navigation("PageClaim");

                    b.Navigation("RolePersonnel");
                });

            modelBuilder.Entity("AssetManagement.Core.Entity.Status", b =>
                {
                    b.Navigation("ActionStatus");

                    b.Navigation("AssetStatus");
                });

            modelBuilder.Entity("AssetManagement.Core.Entity.Unit", b =>
                {
                    b.Navigation("AssetWithoutBarcode");
                });
#pragma warning restore 612, 618
        }
    }
}
